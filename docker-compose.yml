version: '3.1'
services:
  eureka:
    container_name: eureka-server
    build:
      context: ./eureka-service
    ports:
      - '8761:8761'
    restart: always

  api-getway:
    container_name: api-gateway
    build:
      context: ./api-gateway
    ports:
      - '9191:9191'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/

  produit:
    container_name: produit
    build:
      context: ./service-produit
    ports:
      - '9001:9001'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true


  stock:
    container_name: stock
    build:
      context: ./service-stock
    ports:
      - '9002:9002'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true

  db:
    image: mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_DB: tp_achat
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - tp_achat_data:/var/lib/mysql
    restart: unless-stopped

  adminer:
    image: adminer
    ports:
      - '8081:8080'
    restart: unless-stopped

volumes:
  tp_achat_data:
