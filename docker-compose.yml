version: '3.1'
services:
  eureka:
    container_name: eureka-server
    build:
      context: ./eureka-service
    ports:
      - '8761:8761'
    restart: always

  api-getway:
    container_name: api-gateway
    build:
      context: ./api-gateway
    ports:
      - '9191:9191'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
  category-produit:
    container_name: category-produit
    build:
      context: ./service-category-produit
    ports:
      - '9005:9005'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true


  facture:
    container_name: facture
    build:
      context: ./service-facture
    ports:
      - '9004:9004'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true
  fournisseur:
    container_name: fournisseur
    build:
      context: ./service-fournisseur
    ports:
      - '9003:9003'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true

  operateur:
    container_name: operateur
    build:
      context: ./service-operateur
    ports:
      - '9002:9002'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true

  produit:
    container_name: produit
    build:
      context: ./service-produit
    ports:
      - '9001:9001'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true

  reglement:
    container_name: reglement
    build:
      context: ./service-reglement
    ports:
      - '9006:9006'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true

  secteur-activite:
    container_name: secteur-activite
    build:
      context: ./service-secteur-actitivte
    ports:
      - '9007:9007'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true

  stock:
    container_name: stock
    build:
      context: ./service-stock
    ports:
      - '9008:9008'
    restart: always
    depends_on:
      - eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/tp_achat?createDatabaseIfNotExist=true

  db:
    image: mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_DB: tp_achat
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - tp_achat_data:/var/lib/mysql
    restart: unless-stopped

  adminer:
    image: adminer
    ports:
      - '8081:8080'
    restart: unless-stopped

volumes:
  tp_achat_data:
